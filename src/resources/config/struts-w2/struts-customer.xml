<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
    <constant name="struts.devMode" value="false" />

    <!-- 修改package的name和namespace -->
    <package name="customer" extends="json-default" namespace="/customer">

        <!-- 必须包含 开始 -->
        <result-types>
            <result-type name="json" class="org.apache.struts2.json.JSONResult"/>
        </result-types>

        <interceptors>
            <interceptor name ="auth" class ="com.youngbook.common.interceptor.AuthorizationInterceptor" />
            <interceptor name ="transaction" class ="com.youngbook.common.interceptor.TransactionInterceptor" />
            <interceptor name ="defaultInterceptor" class ="com.youngbook.common.interceptor.DefaultInterceptor" />
            <interceptor name ="securityInterceptor" class ="com.youngbook.common.interceptor.SecurityInterceptor" />
            <interceptor-stack name="baseStack">
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="defaultInterceptor"></interceptor-ref>
                <interceptor-ref name="securityInterceptor"></interceptor-ref>
                <interceptor-ref name="transaction"></interceptor-ref>
            </interceptor-stack>
            <interceptor-stack name="authStack">
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="auth"></interceptor-ref>
                <interceptor-ref name="defaultInterceptor"></interceptor-ref>
                <interceptor-ref name="securityInterceptor"></interceptor-ref>
                <interceptor-ref name="transaction"></interceptor-ref>
            </interceptor-stack>
            <interceptor name="json" class="org.apache.struts2.json.JSONInterceptor"/>
        </interceptors>

        <global-results>
            <result name ="login">/modules/system/error/login_error_data.jsp</result>
            <result name ="permission_error">/modules/system/error/permission_error_data.jsp</result>
            <result name ="transaction_error">/modules/system/error/transaction_error.jsp</result>
            <result name="fdcg_common_error">/ph/thirdparty/fdcg/common_error.jsp</result>
            <result name="fdcg_common_success">/ph/thirdparty/fdcg/common_success.jsp</result>
        </global-results>
        <!-- 必须包含 开始 -->

        <!--CustomerPersonal_register-->
        <action name="CustomerPersonal_register" class="com.youngbook.action.customer.CustomerPersonalAction" method="register">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="fdcgRegisterDealNotify" class="com.youngbook.action.customer.CustomerPersonalAction" method="fdcgRegisterDealNotify">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="fdcgChangeMobileDealNotify" class="com.youngbook.action.customer.CustomerPersonalAction" method="fdcgChangeMobileDealNotify">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="fdcgDealNotifyAccountWithdraw" class="com.youngbook.action.customer.CustomerPersonalAction" method="fdcgDealNotifyAccountWithdraw">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="fdcgDealNotifyAccountRecharge" class="com.youngbook.action.customer.CustomerPersonalAction" method="fdcgDealNotifyAccountRecharge">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="fdcgDealNotifyBind" class="com.youngbook.action.customer.CustomerAccountAction" method="fdcgDealNotifyBind">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="fdcgDealNotifyUnbind" class="com.youngbook.action.customer.CustomerAccountAction" method="fdcgDealNotifyUnbind">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>



        <action name="fdcgDealNotifyChangePassword" class="com.youngbook.action.customer.CustomerPersonalAction" method="fdcgDealNotifyChangePassword">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="*_*" class="com.youngbook.action.customer.{1}Action" method="{2}">
            <interceptor-ref name ="authStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>
    </package>
</struts>