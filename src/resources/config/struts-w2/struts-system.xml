<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
    <constant name="struts.devMode" value="false" />

    <!-- 修改package的name和namespace -->
    <package name="system" extends="json-default" namespace="/system">

        <!-- 必须包含 开始 -->
        <result-types>
            <result-type name="json" class="org.apache.struts2.json.JSONResult"/>
        </result-types>

        <interceptors>
            <interceptor name ="auth" class ="com.youngbook.common.interceptor.AuthorizationInterceptor" />
            <interceptor name ="defaultInterceptor" class ="com.youngbook.common.interceptor.DefaultInterceptor" />
            <interceptor name ="securityInterceptor" class ="com.youngbook.common.interceptor.SecurityInterceptor" />
            <interceptor-stack name="authStack">
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="auth"></interceptor-ref>
                <interceptor-ref name="defaultInterceptor"></interceptor-ref>
                <interceptor-ref name="securityInterceptor"></interceptor-ref>
            </interceptor-stack>

            <interceptor-stack name="baseStack">
                <interceptor-ref name="defaultInterceptor"></interceptor-ref>
                <interceptor-ref name="securityInterceptor"></interceptor-ref>
            </interceptor-stack>
            <interceptor name="json" class="org.apache.struts2.json.JSONInterceptor"/>
        </interceptors>

        <global-results>
            <result name ="login">/modules/system/error/login_error_data.jsp</result>
            <result name ="info">/w/info.jsp</result>
            <result name ="permission_error">/modules/system/error/permission_error_data.jsp</result>
            <result name ="transaction_error">/modules/system/error/transaction_error.jsp</result>
            <result name ="checkPassword_error">/modules/system/error/transaction_error.jsp</result>
        </global-results>
        <!-- 必须包含 开始 -->


        <action name="FileUpload" class = "com.youngbook.action.system.FileUploadAction" method="upload">
            <interceptor-ref name ="authStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>


        <action name="getMd54PC" class = "com.youngbook.action.system.ConfigAction" method="getMd54PC">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>


        <action name="getFuiouMd5" class = "com.youngbook.action.system.ConfigAction" method="getFuiouMd5">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="loginWithToken" class="com.youngbook.action.system.LoginAction" method="loginWithToken">
            <interceptor-ref name ="baseStack"/>
            <!--<result name="success">/w2/modules/customer/investmentPlan.jsp</result>-->
            <result type="json" name="success">
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
            <result name="login_success_dehecircle">/dehecircle/index.jsp</result>
            <result name="login_mobile_code_dehecircle">/dehecircle/login/login_mobile_code.jsp</result>
            <result name="login_success_monopoly">/monopoly/index.jsp</result>
            <result name="login_mobile_code_monopoly">/monopoly/login/login_mobile_code.jsp</result>
        </action>

        <action name="saveLog" class = "com.youngbook.action.system.ConfigAction" method="saveLog">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="fileUploadBase64" class="com.youngbook.action.system.FileUploadAction" method="uploadBase64">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="Token_getMobileCode" class="com.youngbook.action.system.TokenAction" method="getMobileCode">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>
        <!--customerRegisterAndLogin-->
        <action name="Login_customerRegisterAndLogin" class="com.youngbook.action.system.LoginAction" method="customerRegisterAndLogin">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="Login_loginCustomerWithMobileCode" class="com.youngbook.action.system.LoginAction" method="loginCustomerWithMobileCode">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>


        <action name="checkAndRenewToken" class="com.youngbook.action.system.TokenAction" method="checkAndRenewToken">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="logoutCustomer" class="com.youngbook.action.system.LoginAction" method="logoutCustomer">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="checkLoginCustomer" class="com.youngbook.action.system.LoginAction" method="checkLoginCustomer">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="checkLoginUser" class="com.youngbook.action.system.LoginAction" method="checkLoginUser">
            <interceptor-ref name ="baseStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="*_*" class="com.youngbook.action.system.{1}Action" method="{2}">
            <interceptor-ref name ="authStack"/>
            <result type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <param name="root">result</param>
                <param name="contentType">text/html</param>
                <param name="excludeNullProperties">true</param>
                <param name="ignoreHierarchy">true</param>
            </result>
        </action>

        <action name="getUploadImg" class="com.youngbook.action.system.ImgAction" method="getUploadImg">
            <interceptor-ref name="defaultInterceptor"></interceptor-ref>
            <interceptor-ref name="securityInterceptor"></interceptor-ref>
            <result name="success" type="stream">
                <param name="contentType">image/png</param>
                <param name="inputName">inputStream</param>
            </result>
        </action>
    </package>
</struts>